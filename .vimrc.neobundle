" Config NeoBundle {{{

if has('vim_starting')
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))
  NeoBundleFetch 'Shougo/neobundle.vim'
call neobundle#end()

if neobundle#exists_not_installed_bundles()
    echomsg 'Not installed bundles : ' .
                \ string(neobundle#get_not_installed_bundle_names())
    echomsg 'Please execute ":NeoBundleInstall" command.'
endif

"}}}

" 日本語help
NeoBundle 'vim-jp/vimdoc-ja'
NeoBundle 'Shougo/unite.vim'

" Config VimFiler {{{

NeoBundle 'Shougo/vimfiler.vim'
let g:vimfiler_as_default_explorer = 1
nnoremap <silent> <Leader>f :VimFilerExplorer<CR>

"}}}

" Async vim
NeoBundle 'Shougo/vimproc', {
  \ 'build' : {
    \ 'windows' : 'make -f make_mingw32.mak',
    \ 'cygwin'  : 'make -f make_cygwin.mak',
    \ 'mac'     : 'make -f make_mac.mak',
    \ 'unix'    : 'make -f make_unix.mak',
  \ },
\}

NeoBundle 'Shougo/neosnippet'
NeoBundle 'Shougo/neosnippet-snippets'

" Config NeoComplete / NeoComplcache {{{

" vimのバージョンが 7.4以上ならneocomplete
"                      未満ならneocomplcache

if v:version >= 704
    NeoBundle 'Shougo/neocomplete'
else
    NeoBundle 'neocomplcache'
    let g:neocomplcache_enable_at_startup  = 1
    let g:neocomplcache_enable_auto_select = 0
    let g:neocomplcache_enable_smart_case  = 1
    let g:neocomplcache_enable_underbar_completion = 1
    let g:neocomplcache_enable_camel_case_completion = 1
    inoremap <expr><TAB> pumvisible() ? "\<Down>" : "\<TAB>"
    inoremap <expr><S-TAB> pumvisible() ? "\<Up>" : "\<S-TAB>"
    inoremap <expr><C-y> neocomplcache#close_popup()
    inoremap <expr><C-e> neocomplcache#cancel_popup()
    inoremap <expr><CR> neocomplcache#smart_close_popup() . "\<CR>"
    let g:neocomplcache_dictionary_filetype_lists = {
        \ 'default' : '',
        \ 'php'     : $HOME . '/.vim/dict/php.dict',
        \ }
endif

"}}}


" echo function docments
NeoBundle 'Shougo/echodoc', '', 'default'
" insert mode to load
call neobundle#config('echodoc', {
\ 'lazy' : 1,
\ 'autoload' : {
\ 'insert' : 1,
\ }})

" visual mode
" :B Exコマンド(sortなど)
NeoBundle 'taku-o/vim-vis'

" QuickRun  Program execute view
NeoBundle 'thinca/vim-quickrun'
" :QuickRun {program name}
let g:quickrun_config = {
\   "_" : {
\       "runner" : "vimproc",
\       "runner/vimproc/updatetime" : 60
\   },
\}

NeoBundle 'thinca/vim-ref'
" brew install w3m
" tar xzvf php_manual_ja.tar.gz
" mv ~/php-chunked-xhtml ~/.vim/
 let g:ref_phpmanual_path = $HOME . '/.vim/phpmanual/'

let g:ref_source_webdict_use_cache = 1
let g:ref_source_webdict_sites = {
            \ 'alc' : {
            \   'url' : 'http://eow.alc.co.jp/%s/UTF-8/'
            \   }
            \ }
" 出力フィルタ 先頭から行を削除している
function! g:ref_source_webdict_sites.alc.filter(output)
      return join(split(a:output, "\n")[25 :], "\n")
endfunction

:cnoremap aa Ref webdict alc<Space>

" syntax check
" :w after syntax check
" :SyntasticInfo perl checker check
NeoBundle 'scrooloose/syntastic.git'
let g:syntastic_enable_signs = 1
let g:syntastic_auto_loc_list = 2
" perl syntax check enable
let g:syntastic_enable_perl_checker = 1
let g:syntastic_perl_checkers = ['perl', 'podchecker']

" 括弧や引用符の編集ができる
" visual mode S"   選択範囲"で囲む
" nolmal mode ds"  "を削除
" nolmal mode cs"' "を'に変換
NeoBundle 'tpope/vim-surround'

" yank to history reuse
NeoBundle 'LeafCage/yankround.vim'
" yank history
let g:yankround_max_history = 35
let g:yankround_dir = '~/.cache/yankround'
nmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
" paste after <C-p> yank prev
nmap <C-p> <Plug>(yankround-prev)
" paste after <C-n> yank next
nmap <C-n> <Plug>(yankround-next)
" ctrlp.vim conflict measures
nmap <expr><C-p> yankround#is_active() ? "\<Plug>(yankround-prev)" : "<SID>(ctrlp)"
nnoremap <silent><SID>(ctrlp) :<C-u>CtrlP<CR>
" paste after g<C-p> yank history
nnoremap <silent>g<C-p> :<C-u>CtrlPYankRound<CR>


" CtrlP file search
NeoBundle 'kien/ctrlp.vim'
" Match files Full Screen
let g:ctrlp_max_height = &lines

" Open Browser
NeoBundle 'git@github.com:tyru/open-browser.vim.git'
" PreVim    MarkDown Preview
NeoBundle 'kannokanno/previm'
" MarkDown filetype
augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
augroup END

" https://github.com/tpope/vim-abolish
NeoBundle 'tpope/vim-abolish'

" % tag jump extension
NeoBundle 'tmhedberg/matchit'
" Uppercase/Lowercase ignore
let b:match_ignorecase = 1

NeoBundle 'Lokaltog/vim-powerline'
NeoBundle 'alpaca-tc/alpaca_powertabline'
set noshowmode

NeoBundle 'rking/ag.vim'

NeoBundle 'altercation/vim-colors-solarized'
syntax enable
set background=dark
colorscheme solarized
set t_Co=256
NeoBundle 'haya14busa/vim-migemo'

NeoBundle 'joonty/vdebug'
let g:vdebug_force_ascii = 1

" TComment_Vim Config {{{
    " コメントアウトする
    " <C-_><C-_> visualで選択範囲をコメント
    " <C-_>b     複数行コメント
    " <C-_>p     段落をコメント化
    " <C-_>i     <C-v>と組み合わせて使う
    NeoBundle 'tomtom/tcomment_vim'

"}}}
" EasyMotion Config {{{
    " https://github.com/Lokaltog/vim-easymotion
    NeoBundle 'Lokaltog/vim-easymotion'
    nmap s <Plug>(easymotion-s2)
    nmap t <Plug>(easymotion-t2)
    " Tab:ページアップ
    " S-Tab:ページダウン
    map  / <Plug>(easymotion-sn)
    omap / <Plug>(easymotion-tn)
    " map  n <Plug>(easymotion-next)
    " map  N <Plug>(easymotion-prev)
    " 大文字小文字無視
    let g:EasyMotion_smartcase = 1
    " ダウンロード
    let g:EasyMotion_use_migemo = 1

"}}}
" Indent Guides Config {{{
    NeoBundle 'junegunn/vim-easy-align'
    let g:indent_guides_enable_on_vim_startup = 1

    let g:indent_guides_color_change_percent = 30
    let g:indent_guides_guide_size = 1

"}}}
